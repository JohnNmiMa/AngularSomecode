AngularJS Design
1) SomeCodeCtrl - general app controller
2) Header
    * HeaderCtrl - the header controller
    * snippet-search directive
3) TopicPanel
    * TopicPanelCtrl - the topicbar controller
    * topicPanel directive
    * topic directive
4) SnippetBar
    * SnippetBarCtrl - the snippetbar controller
5) SnippetContainer
    * SnippetContainerCtrl - the snippet container controller
    * snippet directive
    * snippet-selector directive
    * SnippetService - makes $http calls to the server
    * SnippetSort - a filter to display the snippets

* The header is in all views
* The ng-view contains the TopicBar, SnippetBar
   and SnippetContainer

Directory Structure:
    static
        - contains SomeCodeCtrl
        - contains shared snippets
        components
            header
            - header.html
            - header.js
            - contains HeaderCtrl
            topicpanel
            - topicpanel.js : topicPanel & topic directives
            - topicpanel.html
            - topic.html
            - topicpanel.less
            snippetbar
            - snippetbar.js
            - snippetbar.html
            - snippetbar.less
            snippets
            - snippets.js : snippet & snippetPopup directives
            - snippets.html
            - snippetPopup.less
            - snippets.less
        - contains snippet-search directive
        signedout : view when signed out
        - signedout.html
        - signedout.css
        - signedout.js
        user : view when signed in
        - user.html
        - user.less
        - user.js
        app.js : app controller
        appViews.js
        appRoutes.js
        snippetLibrary.js
        oauthLibrary.js
        main.less/css
        reset.less
        variables.less
    templates
        index.html - the only rendered html file on the server. It also is an angular template

Implement logged out view - DONE
- Create header - DONE
- Get Flask server running for home page - DONE
- Get Flask server authenticating with Google, Facebook, Twitter OAuth - DONE
  - Get protocol running for one provider - DONE
  - Save token from server away - DONE
  - Create interceptor to insert token header - DONE
- Create SnippetBar - DONE
  - Render Create & Layout icons - DONE
    - hide create button if logged out - DONE
  !- Keep SnippetBar from scrolling off top of page
Implement signed-in view
- Finish SnippetBar - DONE
  - Display Selected Topic - DONE
  !- Implement Topic Sort Order Selector
    !- Add alphabetical & chronolocal sorts
    !- Investigate Custom Sort Order
      !- how to move items in list and keep track of index
      !- add custom sort order field in DB
    - TopicBar ToggleIcon - DONE
      !- investigate ngAnimate - DONE (tough to animate)
      !- how to rotate icon?
- Create TopicBar
  !- how to resize topicbar? - DID & DONE :-)
  !- how to keep topicbar fixed as snippet container scrolls?
  - ngRepeat for list of topics - DONE
    - display all snippets for a selected topic - DONE
  - Topic CRUD - DONE
    - Create - DONE
    - Edit - DONE
    - Delete - DONE
- Create Snippet CRUD Form
  - Implement SnippetBar Create Icon - DONE
  - Add Save/Cancel buttons - DONE
    - Update DB if snippet is added
  - Add public/private selector - DONE
    - Update DB to proper public/private state
  - Add topic selector - DONE
  - Add language selector
- Create Snippet Container - DONE
  - Display all snippets in a topic - DONE
  - Implement SnippetBar Layout Icons - DONE
- Create Snippet Selector - DONE
  - Render Snip-it, layout, edit, and delete icons - DONE
  - Implement layout icons - DONE
  - Implement edit icon - DONE
    - Show Snippet CRUD Form - DONE
  - Implement delete icon - DONE
    - add delete dialog
- Implement CodeMirror Snippet Code Text-Area
  - Create separate test textarea with full implementation - DONE
  - Port test to somecode - DONE (WOW, the implementation worked out great!)
    - make form part of snippet, not something separate when editing - DONE
      - this means to just have a textarea, not a div and textarea where we
        flip back and forth depending upon if we are editing or not. - DONE
    - add ui-codemirror and ui-codemirror-opts to textarea - DONE
      - add codemirror editor options in directive - DONE
    - Show code border when editing - DONE
    - Show textarea outline fuzz when textarea is selected - DONE
    - add cancelEdit to directive - DONE
    - get textarea ngModel loading and persisting from/to server - DONE
    - implement select for different languages - DONE
      - enhance server model to save away snippet language - DONE
    - implement toggling of line numbers - DONE
    - implement toggling of line wrapping - DONE
    - implement toggling of scrolling - DONE

- Get gulp build working - DONE
  - enable '$ gulp' to start flask server - DONE
  - enable '$ gulp build' to create release build - DONE
    - get uglified/minified - DONE
      - fix all 'explicit function annotation' errors - DONE

- Deploy Flask server to a python service that will work with SQLite - DONE

- Implement Snippet Description/Note Text-Area - DONE
  - Add Markdown/HTML HTML editor for snippet description text-area
  - Get the "Scroll" button to work for the description area.

    One of the keys to this entire app is to provide a great code and
    description input experience. The description area must offer the following:
     * Bullets: bullets need to be indented properly. - DONE
     * Numbered lists, where numbers can be started and then continued from where
       they were left off. Just starting at "1" each time a numbered list is started
       is bad.

       Here is an example how bullets and numbered lists should be rendered:

          Some paragraph text that will contain bulleted and numbered items: - DONE
          1) Item one.
             * This is a bullet
             * This is another bullet. This is a long bullet that will demonstrate
               proper bullet text wrapping and indentation.

          2) Item two. Notice that the numbering continued onto two,
             and did not start over to one. - DONE
             a) Sub-item 2.1
             b) Sub-item 2.2
                * This is the first bullet to sub-item 2.2
                * This is the second bullet
                  - This is an indented bullet. The bullet could be another symbol to help
                    show the different level. Also, notice how the bullet text displays
                    proper bullet text wrapping and indentation.
                  - Another indented bullet.

          3) Item three. Notice how the numbering can be continued even though the previous numbering
             was interrupted by a list of bulleted items. - Partially DONE. This will work if the
             text interrupting the numbering flow is indented properly.

- Get public/personal icon working when editing/creating snippets - DONE
- Get prompt on snippet delete implemented - DONE
- Get snippet count implemented in header search bar - DONE
- Get snippet count implemented for logged out screen - DONE

=================== Phase II ======================
!- Make the logged in user a menu.
  - Put "Log Out", "Settings", and "?" as items in the menu
- Display a dynamic "Busy" indicator while snippets are being retrieved from the server
- Add a color selector in the Settings dialog
- Add snippet default height in the Settings dialog
- Keep the Snippet Bar fixed
- Keep the Topic Bar fixed

- Sort snippets in snippetPanel
  - sort according to time created (oldest or newest first)
  - sort alphabetically on title
  !- user defined sort order - this will require a special sort filter. The snippet data will also
     need to be persisted properly, recording the relative snippet order within the topic.

- Move Snippets to topics
!- Implement menu in snippet create/edit form to put snippet in user selected topic

- Pin snippets to topics
  - Implement the 'Snip It' button
  - Describe what occurs when non-owned snippets are edited. Can they be edited? Use copy-on-write?

- Create snippet filter on snippet language
!!! The above functionality will complete a functional and useful snippet tool.

- Create heirarchical topic levels. This will require many-to-many relationship in the db.
  - Show collapsable topics

- Add "GitHub" OAuth
- Search and display Gist snippets


-------------------- BUGS ---------------------
- Fix $setPristine on topicPanel forms that don't yet exist - DONE
- Fix snippetFormBar being obscured when in mobile size - DONE
- Ordered lists only show bullets? Weird! - DONE
- Don't create snippet if there is no title - DONE
  - Add dialog telling user that at minimum, a title is needed to add a new snippet.
- Make sure font size/style is same in snippet placeholder as in snippet - DONE
- Fix topic counter when adding new snippet - DONE
- Fix snippet size when only title is added (looks like the description is showing). - DONE
  Titles-only is fine. Columnar or row layout looks bad. - DONE
- Unselect the currently selected topic for snippet searches - DONE
- Fix snippet cancel error if the snippet language is changed. - DONE
- Fix vertical scrollbar causing layout to break. Turns out there is a setting in MAC General Settings. - DONE (Whew)!
  If you click "When scrolling" in the General Preferences, then the scrollbar only shows when scrolling.
  And the way the scrollbar works seems to change with this setting on. For instance, the scrollbar
  doesn't take up space on the page. It seems to be overlayed on top of the web page.
  If the setting is "Always", then the scrollbar is always present and takes up space in the browser window.
  This is what is causing problems in the layout. When the scrollbar is always present, the layout breaks.
  When it acts as an overlay, the layout works fine. The fix is to make the layout work in both scrollbar modes.
- Fix markdown list styling on Firefox! - DONE
- Can't edit snippet title on Firefox! - DONE
- Fix bug where personal/public snippet (eye) indicator is toggled during edit. - DONE
- Fix "General" topic counter when a topic is deleted that contained snippets. - DONE
  The snippets from the deleted topic are pushed into the "General" topic. Therefore,
  the global snippet counters don't change, but the "General" topic counter does.
- Fix bug where orphaned snippet that is deleted does stays displayed. - DONE
- Fix markdown ordered-list styling when scrolling is on. - DONE
- Understand logout error - be sure to go to log out screen when authentication fails.
- Fix columnar layout when in mobile mode (narrow window). To reproduce:
  1) Get window in large (non modal) size.
  2) Put layout in columnar mode
  3) Vertically shrink the window. Now, you will see that the code textarea is misaligned.

